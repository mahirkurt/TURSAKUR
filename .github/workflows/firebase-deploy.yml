name: Deploy to Firebase Hosting

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Her gün saat 02:00'da veri güncelleme kontrolü yap
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  # Veri güncelleme job'u
  update-data:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run data processing
      run: |
        python scripts/process_data.py
        
    - name: Validate data
      run: |
        python scripts/validate_data.py
        
    - name: Check for data changes
      id: verify-changed-files
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          echo "changed=true" >> $GITHUB_OUTPUT
        else
          echo "changed=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Commit and push data changes
      if: steps.verify-changed-files.outputs.changed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add data/
        git commit -m "Otomatik veri güncellemesi [$(date +'%Y-%m-%d %H:%M')]" || exit 0
        git push

  # Firebase deploy job'u
  deploy:
    needs: update-data
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: main

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Process latest data
      run: |
        python scripts/process_data.py

    - name: Copy files to public directory
      run: |
        mkdir -p public
        cp index.html public/
        cp -r js public/
        cp -r css public/
        cp -r styles public/
        cp -r data public/
        cp sw.js public/

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install Firebase CLI
      run: npm install -g firebase-tools

    - name: Deploy to Firebase
      run: firebase deploy --only hosting --token ${{ secrets.FIREBASE_TOKEN }}
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
