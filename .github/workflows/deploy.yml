name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Her gün saat 02:00'da veri güncelleme kontrolü yap
    - cron: '0 2 * * *'
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Veri güncelleme job'u
  update-data:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run data processing
      run: |
        python scripts/process_data.py
        
    - name: Validate data
      run: |
        python scripts/validate_data.py
        
    - name: Check for data changes
      id: changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        if git diff --quiet data/turkiye_saglik_kuruluslari.json; then
          echo "changed=false" >> $GITHUB_OUTPUT
          echo "No data changes detected"
        else
          echo "changed=true" >> $GITHUB_OUTPUT
          echo "Data changes detected"
          git add data/turkiye_saglik_kuruluslari.json
          git commit -m "Otomatik veri güncelleme - $(date '+%Y-%m-%d %H:%M')" || echo "No changes to commit"
          git push || echo "Nothing to push"
        fi
        
    - name: Upload data artifact
      uses: actions/upload-artifact@v3
      with:
        name: health-data
        path: data/turkiye_saglik_kuruluslari.json

  # GitHub Pages deploy job'u
  deploy:
    needs: update-data
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Download data artifact
      uses: actions/download-artifact@v3
      with:
        name: health-data
        path: ./data/
        
    - name: Setup Pages
      uses: actions/configure-pages@v3
      
    - name: Prepare deployment files
      run: |
        # Web dosyalarını root'a kopyala
        cp -r web/* .
        
        # Veri dosyasını doğru konuma yerleştir
        mkdir -p data
        
        # Gereksiz dosyaları temizle
        rm -rf scripts/ temp_* debug_* fetch_*.log *.py requirements.txt .github/
        
        # Index.html dosyasının varlığını kontrol et
        if [ ! -f index.html ]; then
          echo "Error: index.html not found!"
          exit 1
        fi
        
        echo "Files prepared for deployment:"
        ls -la
        
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v2
      with:
        path: '.'
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2
