name: TURSAKUR 2.0 CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'
  PYTHON_VERSION: '3.11'

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    name: 🧪 Lint & Test
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: './tursakur-2.0/package-lock.json'
        
    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: 📦 Install Node dependencies
      working-directory: ./tursakur-2.0
      run: npm ci
      
    - name: 📦 Install Python dependencies
      working-directory: ./tursakur-2.0
      run: |
        pip install -r requirements.txt || echo "No Python requirements found"
        
    - name: 🔍 Lint JavaScript/TypeScript
      working-directory: ./tursakur-2.0
      run: npm run lint || echo "No lint script found"
      
    - name: 🔍 Lint Python
      working-directory: ./tursakur-2.0
      run: |
        pip install flake8
        flake8 scripts/ --max-line-length=120 --ignore=E501,W503 || echo "No Python files to lint"
        
    - name: 🧪 Run tests
      working-directory: ./tursakur-2.0
      run: npm test || echo "No tests found"

  build:
    runs-on: ubuntu-latest
    name: 🏗️ Build Application
    needs: lint-and-test
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: './tursakur-2.0/package-lock.json'
        
    - name: 📦 Install dependencies
      working-directory: ./tursakur-2.0
      run: npm ci
      
    - name: 🏗️ Build application
      working-directory: ./tursakur-2.0
      run: npm run build
      env:
        VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
        VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
        
    - name: 📤 Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: ./tursakur-2.0/dist/
        retention-days: 7

  deploy-staging:
    runs-on: ubuntu-latest
    name: 🚀 Deploy to Staging
    needs: build
    if: github.ref == 'refs/heads/develop'
    
    steps:
    - name: 📥 Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-files
        path: ./dist/
        
    - name: 🚀 Deploy to staging
      run: |
        echo "🏗️ Deploying to staging environment..."
        # Add staging deployment commands here
        # Example: deploy to Netlify, Vercel, or other staging platform
        
  deploy-production:
    runs-on: ubuntu-latest
    name: 🚀 Deploy to Production
    needs: build
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: 📥 Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-files
        path: ./dist/
        
    - name: 🚀 Deploy to production
      run: |
        echo "🏗️ Deploying to production environment..."
        # Add production deployment commands here
        # Example: deploy to production hosting platform
        
  data-sync:
    runs-on: ubuntu-latest
    name: 🔄 Data Synchronization
    needs: deploy-production
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: 📦 Install Python dependencies
      working-directory: ./tursakur-2.0
      run: |
        pip install supabase python-dotenv requests
        
    - name: 🔄 Run data synchronization
      working-directory: ./tursakur-2.0
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
      run: |
        python scripts/supabase_client.py
        echo "✅ Data synchronization completed"

  security-scan:
    runs-on: ubuntu-latest
    name: 🔒 Security Scan
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔒 Run security audit
      working-directory: ./tursakur-2.0
      run: |
        npm audit --audit-level=high || echo "Security audit completed with warnings"
        
    - name: 🔍 Check for secrets
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified

  performance-test:
    runs-on: ubuntu-latest
    name: ⚡ Performance Test
    needs: build
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📥 Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-files
        path: ./dist/
        
    - name: ⚡ Performance audit with Lighthouse
      uses: treosh/lighthouse-ci-action@v10
      with:
        configPath: './tursakur-2.0/.lighthouserc.json'
        uploadArtifacts: true
        temporaryPublicStorage: true
